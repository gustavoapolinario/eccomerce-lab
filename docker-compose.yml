services:

  front-end:
    image: node:20
    working_dir: /app
    environment:
      VUE_APP_BASE_URL: http://localhost:3000/
      PORT: 8080
    ports:
      - "8080:8080"
    volumes:
      - ./front-end/:/app/
    command: [ "npm", "run", "serve" ]

# Test buy product:
# curl localhost:3000/products/
# curl localhost:3000/products/$(curl -s localhost:3000/products/ | jq -r '.[0]._id')
  product-api:
    image: node:20
    working_dir: /app
    environment:
      PORT: 3000
      MONGODB_ENDPOINT: mongo
      MONGODB_PORT: 27017
      MONGODB_USERNAME: product-api
      MONGODB_PASSWORD: product-api-password
      MONGODB_DATABASE: products
      REDIS_ENDPOINT: redis
      REDIS_PORT: 6379
      REDIS_USERNAME: default
      REDIS_PASSWORD: your_redis_password
    ports:
      - "3000:3000"
    volumes:
      - ./product-api/:/app/
    command: [ "npm", "run", "dev" ]
    depends_on:
      - mongo
      - redis

# Test buy product:
# curl -X POST localhost:3001/buy/$(curl -s localhost:3000/products/ | jq -r '.[0]._id')
  buy-api:
    image: node:20
    working_dir: /app
    environment:
      PORT: 3001
      PRODUCT_API_URL: http://product-api:3000
      RABBITMQ_ENDPOINT: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: rabbitmq
      RABBITMQ_PASSWORD: rabbitmq-password
      REDIS_ENDPOINT: redis
      REDIS_PORT: 6379
      REDIS_USERNAME: default
      REDIS_PASSWORD: your_redis_password
    ports:
      - "3001:3001"
    volumes:
      - ./buy-api/:/app/
    command: [ "npm", "run", "dev" ]
    depends_on:
      - rabbitmq
      - redis

  mongo:
    image: mongo
    restart: always
    volumes:
      - ./mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongo-data:/data/db

  redis:
    image: redis:latest
    command: ["redis-server", "--requirepass", "your_redis_password"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"   # RabbitMQ main port
      - "15672:15672" # RabbitMQ management plugin port
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq-password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  mongo-data:
  redis-data:
  rabbitmq_data:

networks:
  ecommercelab:
    driver: bridge
