services:

  front-end:
    image: node:20
    working_dir: /app
    # build:
    #   context: front-end
    #   dockerfile: Dockerfile.development
    environment:
      VUE_APP_BASE_URL: http://localhost:3000/
      PORT: 8080
    ports:
      - "8080:8080"
    volumes:
      - ./front-end/:/app/
    # command: ["ls", "-lah"]
    command: [ "npm", "run", "serve" ]

  product-api:
    image: node:20
    working_dir: /app
    # build:
    #   context: product-api/
    #   dockerfile: Dockerfile.development
    environment:
      MONGODB_ENDPOINT: mongo
      MONGODB_PORT: 27017
      MONGODB_USERNAME: product-api
      MONGODB_PASSWORD: product-api-password
      MONGODB_DATABASE: products
      PORT: 3000
      REDIS_URL: redis://default:your_redis_password@redis:6379
    ports:
      - "3000:3000"
    volumes:
      - ./product-api/:/app/
    command: [ "npm", "run", "dev" ]
    depends_on:
      - mongo
      - redis

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongo-data:/data/db

  redis:
    image: redis:latest
    container_name: redis
    command: ["redis-server", "--requirepass", "your_redis_password"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # RabbitMQ main port
      - "15672:15672" # RabbitMQ management plugin port
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq-password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  mongo-data:
  redis-data:
  rabbitmq_data:

networks:
  ecommercelab:
    driver: bridge
